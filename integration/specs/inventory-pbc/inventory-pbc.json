{
    "openapi": "3.0.1",
    "info": {
        "title": "Inventory PBC definitions",
        "description": "<p>Create and manage Inventory and Fulfillment Center requests and their sub-components.</p>",
        "version": "10.0.0.0",
        "x-introduced": {
            "version": "10.0.0.0"
        }
    },
    "servers": [
        {
            "url": "{schema}://{hostname}:{port}/inventory/api",
            "description": "Generated server url",
            "variables": {
                "schema": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "http"
                },
                "hostname": {
                    "default": "localhost"
                },
                "port": {
                    "enum": [
                        "11080",
                        "11443"
                    ],
                    "default": "11080"
                }
            }
        }
    ],
    "paths": {
        "/v1/persons": {
            "get": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Fetch person details",
                "description": "This API returns person details that match the identifier.",
                "operationId": "getInventoryPerson",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The Person Identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "contact@hcl.com"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentPersonResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Update person details",
                "description": "This API updates person details with values provided in request body.",
                "operationId": "updateInventoryPerson",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Create person details",
                "description": "This API creates person details with values provided in request body.",
                "operationId": "createInventoryPerson",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "The requested resource(s) has been created.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly created resource(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Delete person details",
                "description": "This API deletes person details that match the identifier.",
                "operationId": "deleteInventoryPerson",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The Person Identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "contact@hcl.com"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been deleted."
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Patch person details",
                "description": "This API updates person details with values provided in request body.",
                "operationId": "patchInventoryPerson",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "description": "The identifier used to patch the fulfillment mode.It is matched to the fulfillment mode identifier.",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/inventory-status": {
            "get": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Fetch inventory status",
                "description": "This API fetches the inventory status details that matches identifier.",
                "operationId": "getInventoryStatus",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The Inventory Status Identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryStatusResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Update inventory status",
                "description": "This API updates the inventory status details with request body.",
                "operationId": "updateInventoryStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InventoryStatusRequestBody"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Create inventory status",
                "description": "This API creates inventory status with values provided in request body.",
                "operationId": "createInventoryStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InventoryStatusRequestBody"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "The requested resource(s) has been created.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly created resource(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Delete inventory status",
                "description": "This API deletes inventory status details that matches identifier.",
                "operationId": "deleteInventoryStatus",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The Inventory Status Identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been deleted."
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Patch inventory status",
                "description": "This API patches the inventory status details with request body.",
                "operationId": "patchInventoryStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "description": "The identifier used to patch the inventory status.It is matched to the inventory status identifier.",
                                "items": {
                                    "$ref": "#/components/schemas/InventoryStatusRequestBody"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-modes": {
            "get": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Fetch fulfillment mode",
                "description": "This API returns fulfillment mode details that match the identifier.",
                "operationId": "getInventoryFulfillmentMode",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to find the fulfillment mode.It is matched to the fulfillment mode identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "store_pickup"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentModeResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Update fulfillment mode",
                "description": "This API updates fulfillment mode details with values provided in request body.",
                "operationId": "updateInventoryFulfillmentMode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentMode"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Create fulfillment mode",
                "description": "This API creates fulfillment mode with values provided in request body.",
                "operationId": "createInventoryFulfillmentMode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentMode"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "The requested resource(s) has been created.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly created resource(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Delete fulfillment mode",
                "description": "This API deletes fulfillment mode that match the identifier.",
                "operationId": "deleteInventoryFulfillmentMode",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to delete the fulfillment mode.It is matched to the fulfillment mode identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "store_pickup"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been deleted."
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Patch fulfillment mode",
                "description": "This API updates fulfillment mode details with values provided in request body.",
                "operationId": "patchInventoryFulfillmentMode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "description": "The identifier used to patch the fulfillment mode.It is matched to the fulfillment mode identifier.",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentMode"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been updated."
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-centers/{fulfillmentCenterId}": {
            "get": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Fetch fulfillment centers.",
                "description": "This API returns the fulfillment center details.",
                "operationId": "getInventoryFulfillmentCenterById",
                "parameters": [
                    {
                        "name": "fulfillmentCenterId",
                        "in": "path",
                        "description": "The fulfillmentCenterId used to find the fulfillment centers.It is matched to the address identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "APLZ20"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentCenterResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Update fulfillment center details",
                "description": "This API updates fulfillment center.",
                "operationId": "updateInventoryFulfillmentCenter",
                "parameters": [
                    {
                        "name": "fulfillmentCenterId",
                        "in": "path",
                        "description": "The identifier used to update the fulfillment center.It is matched to the fulfillment center identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "R20000"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FulfillmentCenter"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Delete fulfillment centers.",
                "description": "This API deletes fulfillment center that match the identifier.",
                "operationId": "deleteInventoryFulfillmentCenterById",
                "parameters": [
                    {
                        "name": "fulfillmentCenterId",
                        "in": "path",
                        "description": "The identifier used to delete the fulfillment center.It is matched to the fulfillment center identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "R20000"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been deleted."
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Patch fulfillment center details by id",
                "description": "This API patches the fulfillment center.",
                "operationId": "patchInventoryFulfillmentCenterById",
                "parameters": [
                    {
                        "name": "fulfillmentCenterId",
                        "in": "path",
                        "description": "The identifier used to patch the fulfillment center.It is matched to the fulfillment center identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "R20000"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FulfillmentCenter"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been updated."
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-center-types": {
            "get": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Fetch fulfillment center type",
                "description": "This API returns fulfillment center type details that match the identifier.",
                "operationId": "getInventoryFulfillmentCenterType",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to find the fulfillment center type.It is matched to the fulfillment center type identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "physical"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentCenterTypeResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Update fulfillment center type",
                "description": "This API updates fulfillment center type details with values provided in request body.",
                "operationId": "updateInventoryFulfillmentCenterType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentCenterType"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Create fulfillment center type",
                "description": "This API creates fulfillment center type with values provided in request body.",
                "operationId": "createInventoryFulfillmentCenterType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentCenterType"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "The requested resource(s) has been created.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly created resource(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Delete fulfillment center type",
                "description": "This API deletes fulfillment center type details that match the identifier.",
                "operationId": "deleteInventoryFulfillmentCenterType",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to delete the fulfillment center type.It is matched to the fulfillment center type identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "physical"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been deleted."
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Patch fulfillment center type",
                "description": "This API patches the fulfillment center type.",
                "operationId": "inpbcPatchInventoryFulfillmentCenterType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentCenterType"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resources has been updated."
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/addresses": {
            "get": {
                "tags": [
                    "Inventory Address"
                ],
                "summary": "Fetch address details",
                "description": "This API returns the address details that match the identifier.",
                "operationId": "getInventoryFulfillmentAddress",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to find the address details.It is matched to the address identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Inventory Address"
                ],
                "summary": "Update address details",
                "description": "This API updates the address details with details provided in request body.",
                "operationId": "updateInventoryFulfillmentAddress",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Address"
                ],
                "summary": "Create address details",
                "description": "This API creates new address with details provided in request body.",
                "operationId": "createInventoryFulfillmentAddress",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "The requested resource(s) has been created.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly created resource(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Address"
                ],
                "summary": "Delete address details",
                "description": "This API deletes the address details that match the addressId.",
                "operationId": "deleteInventoryFulfillmentAddress",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to delete the address details.It is matched to the address identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/inventories/reverse": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Performs inventory reverse operation by store",
                "description": "This API reverse the inventory match the store.",
                "operationId": "reverseInventory",
                "parameters": [
                    {
                        "name": "store",
                        "in": "query",
                        "description": "The store used to reverse the inventory.It is matched to the store name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "commitAll",
                        "in": "query",
                        "description": "The commitAll used to commit the records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "example": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryActionBean"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryActionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/inventories/reserve": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Performs inventory reserve operation",
                "description": "This API reserve the inventory match the store.",
                "operationId": "reserveInventory",
                "parameters": [
                    {
                        "name": "store",
                        "in": "query",
                        "description": "The store used to reserve the inventory.It is matched to the store name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "commitAll",
                        "in": "query",
                        "description": "The commitAll used to commit the records.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "example": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryActionBean"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryActionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/inventories/check": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Check inventory by store",
                "description": "This API checks the inventory details that match the store.",
                "operationId": "performInventoryAction",
                "parameters": [
                    {
                        "name": "store",
                        "in": "query",
                        "description": "The store used to check the inventory.It is matched to the store name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryActionBean"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-centers": {
            "get": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Fetch fulfillment centers.",
                "description": "This API returns the list of fulfillment centers.",
                "operationId": "getInventoryFulfillmentCenter",
                "parameters": [
                    {
                        "name": "fulfillmentCenterId",
                        "in": "query",
                        "description": "The fulfillment center id used to find the fulfillment center.It is matched to the fulfillment center id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "APLZ20"
                    },
                    {
                        "name": "fulfillmentCenterName",
                        "in": "query",
                        "description": "The fulfillment center name used to find the fulfillment center.It is matched to the fulfillment center name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "fulfillmentCenterType",
                        "in": "query",
                        "description": "The fulfillment center type used to find the fulfillment center.It is matched to the fulfillment center type.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "factory"
                    },
                    {
                        "name": "person",
                        "in": "query",
                        "description": "The Person Identifier.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "contact@hcl.com"
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "The searchTerm will check for a match with Fulfillment Center Name, Id, Address, Region, Status, Type, Contact Person Name, Contact Person EmailId.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "The latitude used to find the fulfillment centers. It is matched to the latitude of address.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 43.82600021362305
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "The longitude used to find the fulfillment centers. It is matched to the longitude of address.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": -79.2770004272461
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "The radius used to find the fulfillment centers.It is matched to radius.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 10
                    },
                    {
                        "name": "distanceUnit",
                        "in": "query",
                        "description": "The distanceUnit used to identify the radius in miles or kilometers.It is distance measurement(KM/Miles)  .",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "KM"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status used to find the fulfillment centers.It is matched to the status of fulfillment centers.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city used to find the fulfillment centers.It is matched to the city of fulfillment center address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Toronto"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The state used to find the fulfillment centers.It is matched to the state of fulfillment center address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ontario"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "The country used to find the fulfillment centers.It is matched to the country of fulfillment center address.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Canada"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The offset specify page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit used to specify number of fulfillment centers for each page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 10
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sortBy used to sort the fulfillment centers. For example fulfillmentCenterName.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "fulfillmentCenterName"
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "The sortDir used to sort fulfillment centers.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "DESC"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentCenterResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Create fulfillment center(s)",
                "description": "This API creates fulfillment center(s).",
                "operationId": "createInventoryFulfillmentCenter",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentCenter"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "The requested resource(s) has been created.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly created resource(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Delete fulfillment centers.",
                "description": "This API deletes fulfillment center that match the identifier.",
                "operationId": "deleteInventoryFulfillmentCenter",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The identifier used to delete the fulfillment center.It is matched to the fulfillment center identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "R20000"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The requested resources has been deleted."
                    },
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Fulfillment Center"
                ],
                "summary": "Patch fulfillment center details",
                "description": "This API patches fulfillment center.",
                "operationId": "patchInventoryFulfillmentCenter",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "description": "The identifier used to update the fulfillment center.It is matched to the fulfillment center identifier.",
                                "items": {
                                    "$ref": "#/components/schemas/FulfillmentCenter"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been updated."
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/file-uploads": {
            "get": {
                "tags": [
                    "Inventory File Upload"
                ],
                "summary": "Fetch file upload records.",
                "description": "This API returns the file upload records.",
                "operationId": "getInventoryDataloadStats",
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The file name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "inventory-ruby.csv"
                    },
                    {
                        "name": "jobNumber",
                        "in": "query",
                        "description": "The job number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 23
                    },
                    {
                        "name": "personName",
                        "in": "query",
                        "description": "The person name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Admin"
                    },
                    {
                        "name": "timeStarted",
                        "in": "query",
                        "description": "The start time.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "example": "2024-02-23 15:00:46.700"
                    },
                    {
                        "name": "timeCompleted",
                        "in": "query",
                        "description": "The end time.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "example": "2024-02-23 15:00:46.709"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 10
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sortBy used. For example sort by fileName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "fileName"
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "The sortDir used, either ASC or DESC",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ASC"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataloadStatsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Inventory File Upload"
                ],
                "summary": "Inventory file uploads",
                "description": "This API uploads the inventory the files.",
                "operationId": "createInventoryBulkUpload",
                "parameters": [
                    {
                        "name": "operation",
                        "in": "query",
                        "description": "The operation used to process the input files.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "CREATE"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "fileToUpload"
                                ],
                                "type": "object",
                                "properties": {
                                    "fileToUpload": {
                                        "type": "array",
                                        "description": "The fileToUpload is list of input inventory files to be loaded.",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "The request has been accepted.",
                        "headers": {
                            "Location": {
                                "description": "The URI of the newly uploaded file(s)",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/persons/{personId}": {
            "get": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Fetch person details",
                "description": "This API returns person details that match the identifier.",
                "operationId": "getInventoryPersonById",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "The Person Identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "contact@hcl.com"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentPersonResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Delete person details",
                "operationId": "deleteInventoryPersonById",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "The Person Identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "contact@hcl.com"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been deleted."
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Person"
                ],
                "summary": "Patch person details",
                "description": "This API updates person details with values provided in request body.",
                "operationId": "patchInventoryPersonById",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "The identifier used to patch the fulfillment mode.It is matched to the fulfillment mode identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "contact@hcl.com"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/inventory-status/{statusId}": {
            "get": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Fetch inventory status",
                "description": "This API fetches the inventory status details that matches identifier.",
                "operationId": "getInventoryStatusById",
                "parameters": [
                    {
                        "name": "statusId",
                        "in": "path",
                        "description": "The Inventory Status Identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryStatusResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Status"
                ],
                "summary": "Patch inventory status",
                "description": "This API patch the inventory status details with request body.",
                "operationId": "patchInventoryStatusById",
                "parameters": [
                    {
                        "name": "statusId",
                        "in": "path",
                        "description": "The identifier used to patch the inventory status.It is matched to the inventory status identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryStatusRequestBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwaggerResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-modes/{fulfillmentModeId}": {
            "get": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Fetch fulfillment mode",
                "description": "This API returns fulfillment mode details that match the identifier.",
                "operationId": "getInventoryFulfillmentModeById",
                "parameters": [
                    {
                        "name": "fulfillmentModeId",
                        "in": "path",
                        "description": "The identifier used to find the fulfillment mode.It is matched to the fulfillment mode identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "store_pickup"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentModeResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Fulfillment Mode"
                ],
                "summary": "Patch fulfillment mode",
                "description": "This API updates fulfillment mode details with values provided in request body.",
                "operationId": "patchInventoryFulfillmentMode_1",
                "parameters": [
                    {
                        "name": "fulfillmentModeId",
                        "in": "path",
                        "description": "The identifier used to patch the fulfillment mode.It is matched to the fulfillment mode identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "online"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FulfillmentMode"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been updated."
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-center-types/{fulfillmentCenterTypeId}": {
            "get": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Fetch fulfillment center type by identifier",
                "description": "This API returns fulfillment center type details that match the identifier.",
                "operationId": "getInventoryFulfillmentCenterTypeById",
                "parameters": [
                    {
                        "name": "fulfillmentCenterTypeId",
                        "in": "path",
                        "description": "The fulfillmentCenterTypeId used to find the fulfillment center type.It is matched to the fulfillment center type identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "physical"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentCenterTypeResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Fulfillment Center Type"
                ],
                "summary": "Patch fulfillment center type by identifier",
                "description": "This API patches the fulfillment center type by identifier.",
                "operationId": "inpbcPatchInventoryFulfillmentCenterTypeById",
                "parameters": [
                    {
                        "name": "fulfillmentCenterTypeId",
                        "in": "path",
                        "description": "The identifier used to patch the fulfillment center type.It is matched to the fulfillment center identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "factory"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FulfillmentCenterType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been updated."
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/events/{id}": {
            "get": {
                "tags": [
                    "Inventory Event"
                ],
                "summary": "Get events by ID",
                "operationId": "getInventoryEventById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory Event"
                ],
                "summary": "Patch event by id",
                "operationId": "updateInventoryEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The requested resource has been updated."
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/store-suggestions": {
            "get": {
                "tags": [
                    "Inventory Search Suggestions"
                ],
                "summary": "Fetch search suggestions for stores",
                "description": "This API returns the list of stores that match the search term.",
                "operationId": "getInventoryStoreSuggestions",
                "parameters": [
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "The search term used to find the stores. It is matched to the store name. The search term should be at least 3 characters long.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuggestionsStoreResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/item-suggestions": {
            "get": {
                "tags": [
                    "Inventory Search Suggestions"
                ],
                "summary": "Fetch search suggestions for items",
                "description": "This API returns the first five items that match the search term.",
                "operationId": "getInventoryItemSuggestions",
                "parameters": [
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "The search term used to find the items.It is matched to the items. The search term should be at least 3 characters long.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "BD-BEDS-0001-0001"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuggestionsItemResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/item-inventories": {
            "get": {
                "tags": [
                    "Item Inventory"
                ],
                "summary": "Fetch inventory by part number, fulfillmentCenter, status, store",
                "description": "This API fetches the inventory details that match the partnumber, fulfillmentCenter, status, store.",
                "operationId": "getInventoryItemAvailability",
                "parameters": [
                    {
                        "name": "partNumber",
                        "in": "query",
                        "description": "The partNumber used to fetch the inventory details.It is matched to the partnumber.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "LR-FNTR-CO-0002-0002"
                    },
                    {
                        "name": "store",
                        "in": "query",
                        "description": "The store used to fetch the inventory details.It is matched to the store name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "fulfillmentCenter",
                        "in": "query",
                        "description": "The fulfillment center used to fetch the inventory details. It is matched to the fulfillment center.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "MM2050"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status used to fetch the inventory details.It is matched to the status inventories.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The offset specify page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit used to specify number of inventory details records for each page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 10
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sortBy used to sort the inventory details. For example partNumber.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "partNumber"
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "The sortDir used to sort inventory details.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "DESC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/item-inventories/{partNumber}": {
            "get": {
                "tags": [
                    "Item Inventory"
                ],
                "summary": "Fetch inventory by part number",
                "description": "This API fetches the inventory details that match the partnumber.",
                "operationId": "getInventoryItemAvailabilityById",
                "parameters": [
                    {
                        "name": "partNumber",
                        "in": "path",
                        "description": "The partNumber used to fetch the inventory details.It is matched to the partnumber.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "LR-FNTR-CO-0002-0002"
                    },
                    {
                        "name": "store",
                        "in": "query",
                        "description": "The store used to fetch the inventory details.It is matched to the store name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "fulfillmentCenter",
                        "in": "query",
                        "description": "The fulfillment center used to fetch the inventory details. It is matched to the fulfillment center.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "MM2050"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status used to fetch the inventory details.It is matched to the status inventories.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The offset specify page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit used to specify number of inventory details records for each page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 10
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sortBy used to sort the inventory details. For example partNumber ",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "partNumber"
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "The sortDir used to sort inventory details.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "DESC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/inventories": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Fetch inventory by part number",
                "description": "This API fetches the inventory details that match the partnumber.",
                "operationId": "getAdminInventoryAvailability",
                "parameters": [
                    {
                        "name": "partNumber",
                        "in": "query",
                        "description": "The partNumber used to fetch the inventory details.It is matched to the partnumber.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "LR-FNTR-CO-0002-0002"
                    },
                    {
                        "name": "store",
                        "in": "query",
                        "description": "The store used to fetch the inventory details.It is matched to the store name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ruby"
                    },
                    {
                        "name": "fulfillmentCenter",
                        "in": "query",
                        "description": "The fulfillment center used to fetch the inventory details.It is matched to the fulfillment center.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "MM2050"
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "The searchTerm used to fetch the inventory details.It is matched to the partnumber.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "LR-FNTR-CO-0002-0002"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status used to fetch the inventory details.It is matched to the status inventories.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "available"
                    },
                    {
                        "name": "requestedQuantity",
                        "in": "query",
                        "description": "The requestedQuantity used to fetch the inventory details.",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "double"
                        },
                        "example": 10.0
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The offset specify page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit used to specify number of inventory details records for each page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        },
                        "example": 10
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sortBy used to sort the inventory details. For example partNumber.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "partNumber"
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "The sortDir used to sort inventory details.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "DESC"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminInventoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/fulfillment-center-suggestions": {
            "get": {
                "tags": [
                    "Inventory Search Suggestions"
                ],
                "summary": "Fetch search suggestions for fulfillment centers",
                "description": "This API returns the first five fulfillment centers that match the search term.",
                "operationId": "getInventoryFulfillmentCenterSuggestions",
                "parameters": [
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "The search term used to find the fulfillment centers.It is matched to the fulfillment center name. The search term should be at least 3 characters long.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Calgary Mall"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuggestionsFulfillmentCenterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Request parameters are incorrect",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/file-uploads/{id}": {
            "get": {
                "tags": [
                    "Inventory File Upload"
                ],
                "summary": "Fetch file upload report",
                "operationId": "getInventoryDataloadStatsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier used to find file upload record.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/events": {
            "get": {
                "tags": [
                    "Inventory Event"
                ],
                "summary": "Fetch all events",
                "operationId": "getAllInventoryEvents",
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        },
        "/v1/addresses/{addressId}": {
            "get": {
                "tags": [
                    "Inventory Address"
                ],
                "summary": "Fetch address details by identifier",
                "description": "This API returns the address details that match the addressId.",
                "operationId": "getInventoryFulfillmentAddressById",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "description": "The identifier used to find the address details.It is matched to the address identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Inventory Address"
                ],
                "summary": "Delete address details",
                "description": "This API deletes the address details that match the addressId.",
                "operationId": "deleteInventoryFulfillmentAddressById",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "description": "The addressId used to delete the address details.It is matched to the address identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Not authenticated. The user session is not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The user is not authorized to perform the specified request.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource could not be found.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The requested completed successfully.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FulfillmentAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Some of the inputs provided to the request are not valid.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Additional details will be contained on the server logs.",
                        "content": {
                            "application/hal+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuthentication": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Person": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "primaryContact": {
                        "type": "string"
                    },
                    "secondaryContact": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "ErrorInfo": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "messageKey": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "messageArguments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "locale": {
                        "type": "string"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorInfo"
                        }
                    }
                }
            },
            "SwaggerResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    }
                }
            },
            "InventoryStatusRequestBody": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "FulfillmentMode": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Address": {
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "addressLine1": {
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string"
                    },
                    "addressLine3": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "FulfillmentCenter": {
                "type": "object",
                "properties": {
                    "fulfillmentCenterId": {
                        "type": "string"
                    },
                    "fulfillmentCenterName": {
                        "type": "string"
                    },
                    "fulfillmentCenterDescription": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "markDeleted": {
                        "type": "boolean"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fulfillmentCenterType": {
                        "$ref": "#/components/schemas/FulfillmentCenterType"
                    },
                    "fulfillmentCenterAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "fulfillmentCenterMode": {
                        "$ref": "#/components/schemas/FulfillmentMode"
                    },
                    "fulfillmentCenterContact": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FulfillmentCenterAttributes"
                        }
                    }
                }
            },
            "FulfillmentCenterAttributes": {
                "type": "object",
                "properties": {
                    "attrId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "attrName": {
                        "type": "string"
                    },
                    "attrValue1": {
                        "type": "string"
                    },
                    "attrValue2": {
                        "type": "string"
                    }
                }
            },
            "FulfillmentCenterType": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "InventoryActionBean": {
                "type": "object",
                "properties": {
                    "inventories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryBean"
                        }
                    }
                }
            },
            "InventoryBean": {
                "type": "object",
                "properties": {
                    "partNumber": {
                        "type": "string",
                        "description": "Partnumber of the item",
                        "example": "LR-FNTR-CO-0002-0002"
                    },
                    "fulfillmentCenterId": {
                        "type": "string",
                        "description": "Fulfillment center identifier.",
                        "example": "MM2050"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "Unit of measure of the item",
                        "example": "C62"
                    },
                    "requestedQuantity": {
                        "type": "number",
                        "description": "Quantity of the item",
                        "format": "double",
                        "example": 5.0
                    }
                }
            },
            "InventoryActionResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/store-suggestions?searchTerm=Ruby"
                    },
                    "commitAll": {
                        "type": "boolean",
                        "example": true
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryBean"
                        }
                    }
                }
            },
            "AttributeBean": {
                "type": "object",
                "properties": {
                    "attrName": {
                        "type": "string",
                        "description": "Attribute identifier",
                        "example": "Attribute1"
                    },
                    "attrValue1": {
                        "type": "string",
                        "description": "Attribute value1",
                        "example": "SG2050_DR-BFFT-0001-0002_Ruby"
                    },
                    "attrValue2": {
                        "type": "string",
                        "description": "Attribute value2",
                        "example": "{\"title\":\"My first day at work\",\"Feeling\":\"Mixed feeling\"}"
                    },
                    "internal": {
                        "type": "boolean",
                        "description": "Internal property to distinguish admin and shopper attributes",
                        "writeOnly": true,
                        "example": true
                    }
                }
            },
            "InventoryAvailabilityShopperBean": {
                "type": "object",
                "properties": {
                    "partNumber": {
                        "type": "string",
                        "description": "Partnumber of the item",
                        "example": "BD-BEDS-0001-0001"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "Unit of measure of item",
                        "example": "C62"
                    },
                    "productInfo": {
                        "type": "string",
                        "description": "Product information",
                        "example": "Product Info"
                    },
                    "numberOfRecords": {
                        "type": "integer",
                        "description": "Total number of records",
                        "format": "int32",
                        "example": 10
                    },
                    "fulfillmentCentersCount": {
                        "type": "integer",
                        "description": "Fulfillment centers count",
                        "format": "int32",
                        "example": 10
                    },
                    "totalAvailableQuantity": {
                        "type": "number",
                        "description": "Total available quantity of the item",
                        "format": "double",
                        "example": 100.0
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeBean"
                        }
                    },
                    "fulfillmentCenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryShopperBean"
                        }
                    }
                }
            },
            "InventoryResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/item-inventories?store=Ruby"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryAvailabilityShopperBean"
                        }
                    }
                }
            },
            "InventoryShopperBean": {
                "type": "object",
                "properties": {
                    "requestedQuantity": {
                        "type": "number",
                        "description": "Quantity of the item",
                        "format": "double",
                        "example": 10.0
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Total available quantity of the item",
                        "format": "double",
                        "example": 100.0
                    },
                    "inventoryStatus": {
                        "type": "string",
                        "description": "Inventory status of the item",
                        "example": "available"
                    },
                    "store": {
                        "type": "string",
                        "description": "Store name",
                        "example": "Ruby"
                    },
                    "id": {
                        "type": "string",
                        "description": "Fulfillment center identifier.",
                        "example": "APLZ20"
                    },
                    "name": {
                        "type": "string",
                        "description": "Fulfillment center name.",
                        "example": "Alton Towers Plaza"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of fulfillment center.",
                        "example": "physical_store"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeBean"
                        }
                    }
                }
            },
            "Event": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INTERNAL",
                            "EXTERNAL",
                            "ALL"
                        ]
                    },
                    "resource": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "SuggestionsStoreResponse": {
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/store-suggestions?searchTerm=Ruby"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FulfillmentPersonBean": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Person email id",
                        "example": "contact@hcl.com"
                    },
                    "primaryContact": {
                        "type": "string",
                        "description": "Primary contact",
                        "example": "Alex K"
                    },
                    "secondaryContact": {
                        "type": "string",
                        "description": "Secondary contact",
                        "example": "Contact Person 1"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Person phone number",
                        "example": "1234567890"
                    }
                }
            },
            "FulfillmentPersonResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/store-suggestions?searchTerm=Ruby"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FulfillmentPersonBean"
                        }
                    }
                }
            },
            "SuggestionsItemBean": {
                "type": "object",
                "properties": {
                    "partNumber": {
                        "type": "string",
                        "description": "partnumber of the item",
                        "example": "BD-BEDS-0001-0001"
                    },
                    "productDesc": {
                        "type": "string",
                        "description": "description of the item",
                        "example": "Product Info"
                    }
                }
            },
            "SuggestionsItemResponse": {
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/item-suggestions?searchTerm=BD-"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SuggestionsItemBean"
                        }
                    }
                }
            },
            "InventoryStatusBean": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Inventory status identifier",
                        "example": "available"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Inventory status name",
                        "example": "Available"
                    },
                    "description": {
                        "type": "string",
                        "description": "Inventory status description",
                        "example": "Status Description - Available"
                    }
                }
            },
            "InventoryStatusResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/inventory-status?identifier=available"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryStatusBean"
                        }
                    }
                }
            },
            "AdminInventoryResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/inventories?store=Ruby"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryAvailabilityAdminBean"
                        }
                    }
                }
            },
            "InventoryAdminBean": {
                "type": "object",
                "properties": {
                    "assignedQuantity": {
                        "type": "number",
                        "description": "Total on assigned quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "unassignedQuantity": {
                        "type": "number",
                        "description": "Total on unassigned quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "unavailableQuantity": {
                        "type": "number",
                        "description": "Total on unavailable quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "onHandQuantity": {
                        "type": "number",
                        "description": "Total on hand quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "availableQuantity": {
                        "type": "number",
                        "description": "Total available quantity of the item",
                        "format": "double",
                        "example": 100.0
                    },
                    "inventoryStatus": {
                        "type": "string",
                        "description": "Inventory status of the item",
                        "example": "available"
                    },
                    "store": {
                        "type": "string",
                        "description": "Store name",
                        "example": "Ruby"
                    },
                    "id": {
                        "type": "string",
                        "description": "Fulfillment center identifier.",
                        "example": "APLZ20"
                    },
                    "name": {
                        "type": "string",
                        "description": "Fulfillment center name.",
                        "example": "Alton Towers Plaza"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of fulfillment center.",
                        "example": "physical"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Fulfillment center status.",
                        "example": true
                    },
                    "minThreshold": {
                        "type": "number",
                        "description": "Minimum threshold of the item",
                        "format": "double",
                        "example": 25
                    },
                    "maxThreshold": {
                        "type": "number",
                        "description": "Maximum threshold of the item",
                        "format": "double",
                        "example": 100
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "Last updated time stamp",
                        "format": "date-time"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeBean"
                        }
                    }
                }
            },
            "InventoryAvailabilityAdminBean": {
                "type": "object",
                "properties": {
                    "partNumber": {
                        "type": "string",
                        "description": "Partnumber of the item",
                        "example": "BD-BEDS-0001-0001"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "Unit of measure of item",
                        "example": "C62"
                    },
                    "productInfo": {
                        "type": "string",
                        "description": "Product information",
                        "example": "Product Info"
                    },
                    "numberOfRecords": {
                        "type": "integer",
                        "description": "Total number of records",
                        "format": "int32",
                        "example": 10
                    },
                    "fulfillmentCentersCount": {
                        "type": "integer",
                        "description": "Fulfillment centers count",
                        "format": "int32",
                        "example": 10
                    },
                    "totalAvailableQuantity": {
                        "type": "number",
                        "description": "Total available quantity of the item",
                        "format": "double",
                        "example": 100.0
                    },
                    "fulfillmentCentersAboveThresholdCount": {
                        "type": "integer",
                        "description": "Fulfillment centers above threshold count",
                        "format": "int32",
                        "example": 100
                    },
                    "fulfillmentCentersBelowThresholdCount": {
                        "type": "integer",
                        "description": "Fulfillment centers below threshold count",
                        "format": "int32",
                        "example": 100
                    },
                    "fulfillmentCentersOutOfStockCount": {
                        "type": "integer",
                        "description": "Fulfillment centers out of stock count",
                        "format": "int32",
                        "example": 100
                    },
                    "totalOnHandQuantity": {
                        "type": "number",
                        "description": "Total on hand quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "totalAssignedQuantity": {
                        "type": "number",
                        "description": "Total on assigned quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "totalUnassignedQuantity": {
                        "type": "number",
                        "description": "Total on unassigned quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "totalUnavailableQuantity": {
                        "type": "number",
                        "description": "Total on unavailable quantity",
                        "format": "double",
                        "example": 100.0
                    },
                    "minThreshold": {
                        "type": "number",
                        "description": "Minimum threshold",
                        "format": "double",
                        "example": 100.0
                    },
                    "maxThreshold": {
                        "type": "number",
                        "description": "Maximum threshold",
                        "format": "double",
                        "example": 10.0
                    },
                    "estoresCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeBean"
                        }
                    },
                    "fulfillmentCenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryAdminBean"
                        }
                    }
                }
            },
            "FulfillmentModeBean": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Fulfillment center mode identifier.",
                        "example": "store_pickup"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Fulfillment center mode display name.",
                        "example": "Store Pickup"
                    },
                    "description": {
                        "type": "string",
                        "description": "Fulfillment center mode description.",
                        "example": "Fulfillment Mode is Store Pickup"
                    }
                }
            },
            "FulfillmentModeResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/fulfillment-modes?identifier=store_pickup"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FulfillmentModeBean"
                        }
                    }
                }
            },
            "FulfillmentAddressBean": {
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "integer",
                        "description": "address identifier",
                        "format": "int64",
                        "example": 1
                    },
                    "addressLine1": {
                        "type": "string",
                        "description": "address line1",
                        "example": "250 Alton Towers Circle"
                    },
                    "addressLine2": {
                        "type": "string",
                        "description": "address line2",
                        "example": "250 Alton Towers Circle"
                    },
                    "addressLine3": {
                        "type": "string",
                        "description": "address line3",
                        "example": "250 Alton Towers Circle"
                    },
                    "city": {
                        "type": "string",
                        "description": "city",
                        "example": "Toronto"
                    },
                    "state": {
                        "type": "string",
                        "description": "state",
                        "example": "Ontario"
                    },
                    "country": {
                        "type": "string",
                        "description": "country",
                        "example": "Canada"
                    },
                    "zip": {
                        "type": "string",
                        "description": "zip code",
                        "example": "M1V 3Z4"
                    },
                    "phone": {
                        "type": "string",
                        "description": "phone number",
                        "example": "Calgary Mall"
                    },
                    "fax": {
                        "type": "string",
                        "description": "fax",
                        "example": "416.326.8648"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "latitude of address",
                        "format": "double",
                        "example": 43.82600021362305
                    },
                    "longitude": {
                        "type": "number",
                        "description": "longitude of address",
                        "format": "double",
                        "example": -79.2770004272461
                    },
                    "distance": {
                        "type": "number",
                        "description": "distance",
                        "format": "double",
                        "example": 10
                    },
                    "distanceMeasure": {
                        "type": "string",
                        "description": "distance measure",
                        "example": "Miles"
                    }
                }
            },
            "FulfillmentCenterBean": {
                "type": "object",
                "properties": {
                    "fulfillmentCenterId": {
                        "type": "string",
                        "description": "Identifier of the fulfillment center",
                        "example": "APLZ20"
                    },
                    "fulfillmentCenterName": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Alton Towers Plaza"
                    },
                    "fulfillmentCenterDescription": {
                        "type": "string",
                        "description": "Description of the fulfillment center",
                        "example": "Alton Towers Plaza"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "status of the fulfillment center",
                        "example": true
                    },
                    "fulfillmentCenterType": {
                        "$ref": "#/components/schemas/FulfillmentCenterTypeBean"
                    },
                    "fulfillmentCenterAddress": {
                        "$ref": "#/components/schemas/FulfillmentAddressBean"
                    },
                    "fulfillmentCenterMode": {
                        "$ref": "#/components/schemas/FulfillmentMode"
                    },
                    "fulfillmentCenterContact": {
                        "$ref": "#/components/schemas/FulfillmentPersonBean"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeBean"
                        }
                    }
                }
            },
            "FulfillmentCenterResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 50
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/fulfillment-centers?limit=2&offset=1"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FulfillmentCenterBean"
                        }
                    }
                }
            },
            "FulfillmentCenterTypeBean": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Fulfillment center type",
                        "example": "store_pickup"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name of the fulfillment center type",
                        "example": "Store Pickup"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the fulfillment center type",
                        "example": "Fulfillment Mode is Store Pickup"
                    }
                }
            },
            "FulfillmentCenterTypeResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/fulfillment-center-types?identifier=physical"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FulfillmentCenterTypeBean"
                        }
                    }
                }
            },
            "SuggestionsFulfillmentCenterBean": {
                "type": "object",
                "properties": {
                    "fulfillmentCenterName": {
                        "type": "string",
                        "description": "Name of the fulfillment center",
                        "example": "Calgary Mall"
                    },
                    "fulfillmentCenterId": {
                        "type": "string",
                        "description": "Id of the fulfillment center",
                        "example": "CML205"
                    }
                }
            },
            "SuggestionsFulfillmentCenterResponse": {
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/fulfillment-center-suggestions?searchTerm=Calgary Mall"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SuggestionsFulfillmentCenterBean"
                        }
                    }
                }
            },
            "DataloadStats": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "jobNumber": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "person": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "entity": {
                        "type": "string"
                    },
                    "timeStarted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "timeCompleted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "report": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "DataloadStatsResponse": {
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/file-uploads"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataloadStats"
                        }
                    }
                }
            },
            "EventResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            },
            "FulfillmentAddressResponse": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "example": 55
                    },
                    "resourceId": {
                        "type": "string",
                        "example": "<protocol>://<server>:<port>/inventory/api/v1/addresses"
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FulfillmentAddressBean"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuthentication": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}